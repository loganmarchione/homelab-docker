services:
  influxdb:
    container_name: monitoring-influxdb
    image: influxdb:1.12.2@sha256:45f7c84e5e89b4148bce74f495d0b05677dd0f232517f18beb5d1dd2fd104af7
    restart: unless-stopped
    environment:
      - TZ=UTC
      - INFLUXDB_HTTP_AUTH_ENABLED=true
    networks:
      - monitoring
    ports:
      - '0.0.0.0:8086:8086/tcp'
      - '0.0.0.0:8089:8089/udp'
    volumes:
      - 'influx_config:/etc/influxdb'
      - 'influx_data:/var/lib/influxdb'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
  prometheus-server:
    container_name: monitoring-prometheus-server
    image: prom/prometheus:v3.7.1@sha256:ff7e389acbe064a4823212a500393d40a28a8f362e4b05cbf6742a9a3ef736b2
    restart: unless-stopped
    environment:
      - TZ=UTC
    networks:
      - monitoring
      - proxy
    volumes:
      - 'prometheus_config:/etc/prometheus'
      - 'prometheus_data:/prometheus'
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.${SECRET_INTERNAL_DOMAIN_NAME}`)
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.routers.prometheus.tls.certresolver=cloudflare
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
  telegraf-docker-host:
    container_name: monitoring-telegraf-docker-host
    image: telegraf:1.36.2-alpine@sha256:cce687b2317a1dbe99554c4a9bd5200ab53d003a3f443f770be820f0e8be27b7
    restart: unless-stopped
    environment:
      - TZ=UTC
      - HOST_PROC=/host/proc
    user: telegraf:997  # This needs to be the group id of running `stat -c '%g' /var/run/docker.sock` on the docker host
    networks:
      - monitoring
    depends_on:
      - influxdb
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/proc:/host/proc:ro'
      - 'telegraf_docker_host:/etc/telegraf:ro'
  telegraf-whois:
    container_name: monitoring-telegraf-whois
    image: telegraf:1.36.2-alpine@sha256:cce687b2317a1dbe99554c4a9bd5200ab53d003a3f443f770be820f0e8be27b7
    restart: unless-stopped
    environment:
      - TZ=UTC
    networks:
      - monitoring
    depends_on:
      - influxdb
    volumes:
      - 'telegraf_whois:/etc/telegraf:ro'
  telegraf-x509:
    container_name: monitoring-telegraf-x509
    image: telegraf:1.36.2-alpine@sha256:cce687b2317a1dbe99554c4a9bd5200ab53d003a3f443f770be820f0e8be27b7
    restart: unless-stopped
    environment:
      - TZ=UTC
    networks:
      - monitoring
    depends_on:
      - influxdb
    volumes:
      - 'telegraf_x509:/etc/telegraf:ro'
  grafana:
    container_name: monitoring-grafana
    image: grafana/grafana-oss:12.1.1@sha256:a1701c2180249361737a99a01bc770db39381640e4d631825d38ff4535efa47d
    restart: unless-stopped
    environment:
      - TZ=UTC
    env_file:
      - /custom/files/grafana.env
    networks:
      - proxy
      - monitoring
    depends_on:
      - influxdb
    volumes:
      - 'grafana_data:/var/lib/grafana'
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.${SECRET_INTERNAL_DOMAIN_NAME}`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=cloudflare
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.services.grafana.loadbalancer.server.port=3000

networks:
  monitoring:
  proxy:
    external: true

volumes:
  influx_config:
    driver: local
  influx_data:
    driver: local
  prometheus_config:
    driver: local
  prometheus_data:
    driver: local
  telegraf_docker_host:
    driver: local
  telegraf_whois:
    driver: local
  telegraf_x509:
    driver: local
  grafana_data:
    driver: local
